
#Predict Population Growth Based on Fertility Rate (India-Specific)
india_df = final_df[final_df['Countryname'] == 'India'].copy()

X = india_df['FertilityRateTotalBirthsPerWoman'].values.reshape(-1, 1)  # Predictor
y = india_df['PopulationGrowthAnnual%'].values  # Target

# Handle any remaining NaNs
mask = ~np.isnan(X).any(axis=1) & ~np.isnan(y)
X = X[mask]
y = y[mask]

# Fit model
model = LinearRegression()
model.fit(X, y)

# Results
slope = model.coef_[0]
intercept = model.intercept_
r2 = r2_score(y, model.predict(X))
mse = mean_squared_error(y, model.predict(X))

print("\nSimple Linear Regression Results (Population Growth vs. Fertility):")
print(f"Slope: {slope:.4f} (Growth changes by {slope:.4f}% per TFR unit)")
print(f"Intercept: {intercept:.4f}")
print(f"RÂ² Score: {r2:.4f}")
print(f"Mean Squared Error: {mse:.4f}")

# Prediction for TFR = 2.0 (projected 2023)
predicted_tfr = np.array([[2.0]])
predicted_growth = model.predict(predicted_tfr)[0]
print(f"\nPrediction: Population Growth for TFR 2.0: {predicted_growth:.2f}%")

# Visualization
plt.figure(figsize=(16,9))
plt.scatter(X, y, color='blue', label='Data Points')
plt.plot(X, model.predict(X), color='red', linewidth=2, label='Regression Line')
plt.scatter(predicted_tfr, predicted_growth, color='green', label=f'Prediction (TFR 2.1): {predicted_growth:.2f}%')
plt.xlabel('Fertility Rate (Births per Woman)')
plt.ylabel('Population Growth Annual (%)')
plt.title('Population Growth vs. Fertility Rate in India (2000-2022)')
plt.legend()
plt.grid(True, linestyle='--', alpha=0.7)
plt.show()


